const puppeteer = require('puppeteer');\n\n(async () => {\n  try {\n    const browser = await puppeteer.launch({ headless: true });\n    const page = await browser.newPage();\n    // 请替换为实际的 ROM 数据网站 URL\n    await page.goto('https://example.com');\n    // 这里需要根据实际页面结构编写选择器和解析逻辑\n    const games = await page.evaluate(() => {\n      return Array.from(document.querySelectorAll('.game-item')).map((element) => {\n        return {\n          id: parseInt(element.dataset.id),\n          title: element.querySelector('.game-title').textContent.trim(),\n          coverUrl: element.querySelector('.game-cover').src,\n          romSize: element.querySelector('.game-size').textContent.trim(),\n        };\n      });\n    });\n    console.log(games);\n    await browser.close();\n    return games;\n  } catch (error) {\n    console.error('爬取数据失败:', error);\n  }\n})();